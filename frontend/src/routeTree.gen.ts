/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProductIndexRouteImport } from './routes/product/index'
import { Route as OrderIndexRouteImport } from './routes/order/index'
import { Route as CartIndexRouteImport } from './routes/cart/index'
import { Route as UserRegisterRouteImport } from './routes/user/register'
import { Route as UserLoginRouteImport } from './routes/user/login'
import { Route as ProductRecommendRouteImport } from './routes/product/recommend'
import { Route as OrderHistoryRouteImport } from './routes/order/history'
import { Route as AdminRegisterRouteImport } from './routes/admin/register'
import { Route as AdminLoginRouteImport } from './routes/admin/login'
import { Route as OrderOrderIdCompleteRouteImport } from './routes/order/$orderId/complete'
import { Route as ProductPcItemIdIndexRouteImport } from './routes/product/pc/$itemId/index'
import { Route as ProductBookItemIdIndexRouteImport } from './routes/product/book/$itemId/index'
import { Route as ProductPcItemIdReviewRouteImport } from './routes/product/pc/$itemId/review'
import { Route as ProductBookItemIdReviewRouteImport } from './routes/product/book/$itemId/review'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductIndexRoute = ProductIndexRouteImport.update({
  id: '/product/',
  path: '/product/',
  getParentRoute: () => rootRouteImport,
} as any)
const OrderIndexRoute = OrderIndexRouteImport.update({
  id: '/order/',
  path: '/order/',
  getParentRoute: () => rootRouteImport,
} as any)
const CartIndexRoute = CartIndexRouteImport.update({
  id: '/cart/',
  path: '/cart/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserRegisterRoute = UserRegisterRouteImport.update({
  id: '/user/register',
  path: '/user/register',
  getParentRoute: () => rootRouteImport,
} as any)
const UserLoginRoute = UserLoginRouteImport.update({
  id: '/user/login',
  path: '/user/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductRecommendRoute = ProductRecommendRouteImport.update({
  id: '/product/recommend',
  path: '/product/recommend',
  getParentRoute: () => rootRouteImport,
} as any)
const OrderHistoryRoute = OrderHistoryRouteImport.update({
  id: '/order/history',
  path: '/order/history',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRegisterRoute = AdminRegisterRouteImport.update({
  id: '/admin/register',
  path: '/admin/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminLoginRoute = AdminLoginRouteImport.update({
  id: '/admin/login',
  path: '/admin/login',
  getParentRoute: () => rootRouteImport,
} as any)
const OrderOrderIdCompleteRoute = OrderOrderIdCompleteRouteImport.update({
  id: '/order/$orderId/complete',
  path: '/order/$orderId/complete',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductPcItemIdIndexRoute = ProductPcItemIdIndexRouteImport.update({
  id: '/product/pc/$itemId/',
  path: '/product/pc/$itemId/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductBookItemIdIndexRoute = ProductBookItemIdIndexRouteImport.update({
  id: '/product/book/$itemId/',
  path: '/product/book/$itemId/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductPcItemIdReviewRoute = ProductPcItemIdReviewRouteImport.update({
  id: '/product/pc/$itemId/review',
  path: '/product/pc/$itemId/review',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductBookItemIdReviewRoute = ProductBookItemIdReviewRouteImport.update({
  id: '/product/book/$itemId/review',
  path: '/product/book/$itemId/review',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin/login': typeof AdminLoginRoute
  '/admin/register': typeof AdminRegisterRoute
  '/order/history': typeof OrderHistoryRoute
  '/product/recommend': typeof ProductRecommendRoute
  '/user/login': typeof UserLoginRoute
  '/user/register': typeof UserRegisterRoute
  '/cart': typeof CartIndexRoute
  '/order': typeof OrderIndexRoute
  '/product': typeof ProductIndexRoute
  '/order/$orderId/complete': typeof OrderOrderIdCompleteRoute
  '/product/book/$itemId/review': typeof ProductBookItemIdReviewRoute
  '/product/pc/$itemId/review': typeof ProductPcItemIdReviewRoute
  '/product/book/$itemId': typeof ProductBookItemIdIndexRoute
  '/product/pc/$itemId': typeof ProductPcItemIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin/login': typeof AdminLoginRoute
  '/admin/register': typeof AdminRegisterRoute
  '/order/history': typeof OrderHistoryRoute
  '/product/recommend': typeof ProductRecommendRoute
  '/user/login': typeof UserLoginRoute
  '/user/register': typeof UserRegisterRoute
  '/cart': typeof CartIndexRoute
  '/order': typeof OrderIndexRoute
  '/product': typeof ProductIndexRoute
  '/order/$orderId/complete': typeof OrderOrderIdCompleteRoute
  '/product/book/$itemId/review': typeof ProductBookItemIdReviewRoute
  '/product/pc/$itemId/review': typeof ProductPcItemIdReviewRoute
  '/product/book/$itemId': typeof ProductBookItemIdIndexRoute
  '/product/pc/$itemId': typeof ProductPcItemIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin/login': typeof AdminLoginRoute
  '/admin/register': typeof AdminRegisterRoute
  '/order/history': typeof OrderHistoryRoute
  '/product/recommend': typeof ProductRecommendRoute
  '/user/login': typeof UserLoginRoute
  '/user/register': typeof UserRegisterRoute
  '/cart/': typeof CartIndexRoute
  '/order/': typeof OrderIndexRoute
  '/product/': typeof ProductIndexRoute
  '/order/$orderId/complete': typeof OrderOrderIdCompleteRoute
  '/product/book/$itemId/review': typeof ProductBookItemIdReviewRoute
  '/product/pc/$itemId/review': typeof ProductPcItemIdReviewRoute
  '/product/book/$itemId/': typeof ProductBookItemIdIndexRoute
  '/product/pc/$itemId/': typeof ProductPcItemIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin/login'
    | '/admin/register'
    | '/order/history'
    | '/product/recommend'
    | '/user/login'
    | '/user/register'
    | '/cart'
    | '/order'
    | '/product'
    | '/order/$orderId/complete'
    | '/product/book/$itemId/review'
    | '/product/pc/$itemId/review'
    | '/product/book/$itemId'
    | '/product/pc/$itemId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin/login'
    | '/admin/register'
    | '/order/history'
    | '/product/recommend'
    | '/user/login'
    | '/user/register'
    | '/cart'
    | '/order'
    | '/product'
    | '/order/$orderId/complete'
    | '/product/book/$itemId/review'
    | '/product/pc/$itemId/review'
    | '/product/book/$itemId'
    | '/product/pc/$itemId'
  id:
    | '__root__'
    | '/'
    | '/admin/login'
    | '/admin/register'
    | '/order/history'
    | '/product/recommend'
    | '/user/login'
    | '/user/register'
    | '/cart/'
    | '/order/'
    | '/product/'
    | '/order/$orderId/complete'
    | '/product/book/$itemId/review'
    | '/product/pc/$itemId/review'
    | '/product/book/$itemId/'
    | '/product/pc/$itemId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminLoginRoute: typeof AdminLoginRoute
  AdminRegisterRoute: typeof AdminRegisterRoute
  OrderHistoryRoute: typeof OrderHistoryRoute
  ProductRecommendRoute: typeof ProductRecommendRoute
  UserLoginRoute: typeof UserLoginRoute
  UserRegisterRoute: typeof UserRegisterRoute
  CartIndexRoute: typeof CartIndexRoute
  OrderIndexRoute: typeof OrderIndexRoute
  ProductIndexRoute: typeof ProductIndexRoute
  OrderOrderIdCompleteRoute: typeof OrderOrderIdCompleteRoute
  ProductBookItemIdReviewRoute: typeof ProductBookItemIdReviewRoute
  ProductPcItemIdReviewRoute: typeof ProductPcItemIdReviewRoute
  ProductBookItemIdIndexRoute: typeof ProductBookItemIdIndexRoute
  ProductPcItemIdIndexRoute: typeof ProductPcItemIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/product/': {
      id: '/product/'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof ProductIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/order/': {
      id: '/order/'
      path: '/order'
      fullPath: '/order'
      preLoaderRoute: typeof OrderIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cart/': {
      id: '/cart/'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/register': {
      id: '/user/register'
      path: '/user/register'
      fullPath: '/user/register'
      preLoaderRoute: typeof UserRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/login': {
      id: '/user/login'
      path: '/user/login'
      fullPath: '/user/login'
      preLoaderRoute: typeof UserLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/product/recommend': {
      id: '/product/recommend'
      path: '/product/recommend'
      fullPath: '/product/recommend'
      preLoaderRoute: typeof ProductRecommendRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/order/history': {
      id: '/order/history'
      path: '/order/history'
      fullPath: '/order/history'
      preLoaderRoute: typeof OrderHistoryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/register': {
      id: '/admin/register'
      path: '/admin/register'
      fullPath: '/admin/register'
      preLoaderRoute: typeof AdminRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/login': {
      id: '/admin/login'
      path: '/admin/login'
      fullPath: '/admin/login'
      preLoaderRoute: typeof AdminLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/order/$orderId/complete': {
      id: '/order/$orderId/complete'
      path: '/order/$orderId/complete'
      fullPath: '/order/$orderId/complete'
      preLoaderRoute: typeof OrderOrderIdCompleteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/product/pc/$itemId/': {
      id: '/product/pc/$itemId/'
      path: '/product/pc/$itemId'
      fullPath: '/product/pc/$itemId'
      preLoaderRoute: typeof ProductPcItemIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/product/book/$itemId/': {
      id: '/product/book/$itemId/'
      path: '/product/book/$itemId'
      fullPath: '/product/book/$itemId'
      preLoaderRoute: typeof ProductBookItemIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/product/pc/$itemId/review': {
      id: '/product/pc/$itemId/review'
      path: '/product/pc/$itemId/review'
      fullPath: '/product/pc/$itemId/review'
      preLoaderRoute: typeof ProductPcItemIdReviewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/product/book/$itemId/review': {
      id: '/product/book/$itemId/review'
      path: '/product/book/$itemId/review'
      fullPath: '/product/book/$itemId/review'
      preLoaderRoute: typeof ProductBookItemIdReviewRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminLoginRoute: AdminLoginRoute,
  AdminRegisterRoute: AdminRegisterRoute,
  OrderHistoryRoute: OrderHistoryRoute,
  ProductRecommendRoute: ProductRecommendRoute,
  UserLoginRoute: UserLoginRoute,
  UserRegisterRoute: UserRegisterRoute,
  CartIndexRoute: CartIndexRoute,
  OrderIndexRoute: OrderIndexRoute,
  ProductIndexRoute: ProductIndexRoute,
  OrderOrderIdCompleteRoute: OrderOrderIdCompleteRoute,
  ProductBookItemIdReviewRoute: ProductBookItemIdReviewRoute,
  ProductPcItemIdReviewRoute: ProductPcItemIdReviewRoute,
  ProductBookItemIdIndexRoute: ProductBookItemIdIndexRoute,
  ProductPcItemIdIndexRoute: ProductPcItemIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
